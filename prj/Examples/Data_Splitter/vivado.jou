#-----------------------------------------------------------
# Vivado v2020.1 (64-bit)
# SW Build 2902540 on Wed May 27 19:54:35 MDT 2020
# IP Build 2902112 on Wed May 27 22:43:36 MDT 2020
# Start of session at: Thu May 23 14:30:29 2024
# Process ID: 3043011
# Current directory: /home/chengjie/Mossbauer_FPGA_DEV/prj/Examples/Data_Splitter
# Command line: vivado
# Log file: /home/chengjie/Mossbauer_FPGA_DEV/prj/Examples/Data_Splitter/vivado.log
# Journal file: /home/chengjie/Mossbauer_FPGA_DEV/prj/Examples/Data_Splitter/vivado.jou
#-----------------------------------------------------------
start_gui
open_project /home/chengjie/Mossbauer_FPGA_DEV/prj/Examples/Data_Splitter/tmp/Data_Splitter/Data_Splitter.xpr
open_bd_design {/home/chengjie/Mossbauer_FPGA_DEV/prj/Examples/Data_Splitter/tmp/Data_Splitter/Data_Splitter.srcs/sources_1/bd/system/system.bd}
update_compile_order -fileset sources_1
startgroup
set_property -dict [list CONFIG.C_DOUT_DEFAULT {0x09600080}] [get_bd_cells axi_gpio_2]
endgroup
save_bd_design
reset_run synth_1
reset_run system_axi_gpio_2_0_synth_1
launch_runs impl_1 -to_step write_bitstream -jobs 6
wait_on_run impl_1
echo -n "all:{ system_wrapper.bit }" >  system_wrapper.bif
bootgen -image system_wrapper.bif -arch zynq -process_bitstream bin -o system_wrapper.bit.bin -w
ls
cd tmp
ls
cd Data_Splitter
ls
cd Data_Splitter.runs
ls
cd impl_1
ls
echo -n "all:{ system_wrapper.bit }" >  system_wrapper.bif
bootgen -image system_wrapper.bif -arch zynq -process_bitstream bin -o system_wrapper.bit.bin -w
ls
startgroup
set_property -dict [list CONFIG.C_DOUT_DEFAULT {0x0a400080}] [get_bd_cells axi_gpio_2]
endgroup
save_bd_design
reset_run synth_1
reset_run system_axi_gpio_2_0_synth_1
launch_runs impl_1 -to_step write_bitstream -jobs 6
wait_on_run impl_1
echo -n "all:{ system_wrapper.bit }" >  system_wrapper.bif
bootgen -image system_wrapper.bif -arch zynq -process_bitstream bin -o system_wrapper.bit.bin -w
update_module_reference system_rising32_0_0
reset_run synth_1
launch_runs impl_1 -to_step write_bitstream -jobs 6
wait_on_run impl_1
startgroup
set_property -dict [list CONFIG.C_DOUT_DEFAULT {0x0a4000a0}] [get_bd_cells axi_gpio_2]
endgroup
save_bd_design
reset_run synth_1
reset_run system_axi_gpio_2_0_synth_1
launch_runs impl_1 -to_step write_bitstream -jobs 6
wait_on_run impl_1
echo -n "all:{ system_wrapper.bit }" >  system_wrapper.bif
bootgen -image system_wrapper.bif -arch zynq -process_bitstream bin -o system_wrapper.bit.bin -w
set_property name c_lt [get_bd_cells l_ht]
startgroup
create_bd_cell -type ip -vlnv xilinx.com:ip:util_vector_logic:2.0 util_vector_logic_0
endgroup
set_property -dict [list CONFIG.C_SIZE {1} CONFIG.C_OPERATION {or} CONFIG.LOGO_FILE {data/sym_orgate.png}] [get_bd_cells util_vector_logic_0]
connect_bd_net [get_bd_pins util_vector_logic_0/Op1] [get_bd_pins back_skim/enable]
connect_bd_net [get_bd_pins util_vector_logic_0/Op2] [get_bd_pins forward_skim/enable]
disconnect_bd_net /skim_voltage_Res [get_bd_pins xlconcat_0/In2]
startgroup
connect_bd_net [get_bd_pins util_vector_logic_0/Res] [get_bd_pins xlconcat_0/In2]
endgroup
save_bd_design
reset_run synth_1
launch_runs impl_1 -to_step write_bitstream -jobs 6
wait_on_run impl_1
delete_bd_objs [get_bd_nets high_threshold_Dout]
connect_bd_net [get_bd_pins high_threshold_0/input_high] [get_bd_pins adc_smooth_mossbauer_0/short_smooth]
delete_bd_objs [get_bd_nets low_threshold_Dout]
connect_bd_net [get_bd_pins low_threshold_0/input_low] [get_bd_pins adc_smooth_mossbauer_0/short_smooth]
save_bd_design
reset_run synth_1
launch_runs impl_1 -to_step write_bitstream -jobs 6
wait_on_run impl_1
echo -n "all:{ system_wrapper.bit }" >  system_wrapper.bif
bootgen -image system_wrapper.bif -arch zynq -process_bitstream bin -o system_wrapper.bit.bin -w
delete_bd_objs [get_bd_nets adc_smooth_mossbauer_0_short_smooth]
connect_bd_net [get_bd_pins low_threshold_0/input_low] [get_bd_pins low_threshold/Dout]
connect_bd_net [get_bd_pins high_threshold/Dout] [get_bd_pins high_threshold_0/input_high]
save_bd_design
reset_run synth_1
launch_runs impl_1 -to_step write_bitstream -jobs 6
wait_on_run impl_1
disconnect_bd_net /signal_split_0_M_AXIS_PORT1_tdata [get_bd_pins low_threshold_0/adc_dat_a]
disconnect_bd_net /signal_split_0_M_AXIS_PORT1_tdata [get_bd_pins high_threshold_0/adc_dat_a]
connect_bd_net [get_bd_pins low_threshold_0/adc_dat_a] [get_bd_pins adc_smooth_mossbauer_0/smooth_data]
set_property location {6 2785 80} [get_bd_cells high_threshold_0]
connect_bd_net [get_bd_pins high_threshold_0/adc_dat_a] [get_bd_pins adc_smooth_mossbauer_0/smooth_data]
echo -n "all:{ system_wrapper.bit }" >  system_wrapper.bif
bootgen -image system_wrapper.bif -arch zynq -process_bitstream bin -o system_wrapper.bit.bin -w
disconnect_bd_net /adc_smooth_mossbauer_0_smooth_data [get_bd_pins low_threshold_0/adc_dat_a]
delete_bd_objs [get_bd_nets high_threshold_Dout]
connect_bd_net [get_bd_pins axi_gpio_5/gpio_io_o] [get_bd_pins low_threshold_0/adc_dat_a]
disconnect_bd_net /adc_smooth_mossbauer_0_smooth_data [get_bd_pins high_threshold_0/adc_dat_a]
connect_bd_net [get_bd_pins high_threshold/Dout] [get_bd_pins high_threshold_0/input_high]
connect_bd_net [get_bd_pins high_threshold_0/adc_dat_a] [get_bd_pins axi_gpio_5/gpio_io_o]
save_bd_design
reset_run synth_1
launch_runs impl_1 -to_step write_bitstream -jobs 6
wait_on_run impl_1
echo -n "all:{ system_wrapper.bit }" >  system_wrapper.bif
bootgen -image system_wrapper.bif -arch zynq -process_bitstream bin -o system_wrapper.bit.bin -w
disconnect_bd_net /axi_gpio_5_gpio_io_o [get_bd_pins high_threshold_0/adc_dat_a]
disconnect_bd_net /axi_gpio_5_gpio_io_o [get_bd_pins low_threshold_0/adc_dat_a]
connect_bd_net [get_bd_pins adc_smooth_mossbauer_0/axis_adc_a] [get_bd_pins high_threshold_0/adc_dat_a]
connect_bd_net [get_bd_pins adc_smooth_mossbauer_0/axis_adc_a] [get_bd_pins low_threshold_0/adc_dat_a]
save_bd_design
reset_run synth_1
launch_runs impl_1 -to_step write_bitstream -jobs 6
wait_on_run impl_1
echo -n "all:{ system_wrapper.bit }" >  system_wrapper.bif
bootgen -image system_wrapper.bif -arch zynq -process_bitstream bin -o system_wrapper.bit.bin -w
open_bd_design {/home/chengjie/Mossbauer_FPGA_DEV/prj/Examples/Data_Splitter/tmp/Data_Splitter/Data_Splitter.srcs/sources_1/bd/system/system.bd}
startgroup
set_property -dict [list CONFIG.C_DOUT_DEFAULT {0x01000200}] [get_bd_cells axi_gpio_5]
endgroup
save_bd_design
reset_run synth_1
reset_run system_axi_gpio_5_0_synth_1
launch_runs impl_1 -to_step write_bitstream -jobs 6
wait_on_run impl_1
echo -n "all:{ system_wrapper.bit }" >  system_wrapper.bif
bootgen -image system_wrapper.bif -arch zynq -process_bitstream bin -o system_wrapper.bit.bin -w
startgroup
set_property -dict [list CONFIG.DIN_TO {0} CONFIG.DIN_FROM {13}] [get_bd_cells c_lt]
endgroup
startgroup
set_property -dict [list CONFIG.DIN_TO {16} CONFIG.DIN_FROM {29} CONFIG.DOUT_WIDTH {14}] [get_bd_cells c_ht]
endgroup
startgroup
set_property -dict [list CONFIG.C_DOUT_DEFAULT {0x02000100}] [get_bd_cells axi_gpio_5]
endgroup
update_module_reference system_event_convert_0_0
reset_run synth_1
reset_run system_axi_gpio_5_0_synth_1
launch_runs impl_1 -to_step write_bitstream -jobs 6
wait_on_run impl_1
update_module_reference system_event_count_0_0
reset_run synth_1
launch_runs impl_1 -to_step write_bitstream -jobs 6
wait_on_run impl_1
echo -n "all:{ system_wrapper.bit }" >  system_wrapper.bif
bootgen -image system_wrapper.bif -arch zynq -process_bitstream bin -o system_wrapper.bit.bin -w
